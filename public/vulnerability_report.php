<?php
session_start();
require_once '../src/db/db.php';
require_once '../src/log/log_function.php';

// 로그인 체크
if (!isset($_SESSION['admin']) && !isset($_SESSION['guest'])) {
    header("Location: login.php");
    exit();
}

$username = $_SESSION['admin'] ?? $_SESSION['guest'] ?? '';
$isAdmin = isset($_SESSION['admin']);

// 취약점 제보 처리 (일반 사용자만)
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['submit_report'])) {
    $title = trim($_POST['title'] ?? '');
    $description = trim($_POST['description'] ?? '');
    $severity = $_POST['severity'] ?? 'medium';
    $category = $_POST['category'] ?? 'other';
    $reproduction_steps = trim($_POST['reproduction_steps'] ?? '');
    $impact = trim($_POST['impact'] ?? '');
    
    if ($title && $description) {
        // 테이블 존재 확인 및 생성
        try {
            $check_table = $pdo->query("SHOW TABLES LIKE 'vulnerability_reports'");
            $table_exists = $check_table->rowCount() > 0;
            
            if (!$table_exists) {
                $create_table_sql = "
                CREATE TABLE IF NOT EXISTS vulnerability_reports (
                    id INT AUTO_INCREMENT PRIMARY KEY,
                    title VARCHAR(255) NOT NULL,
                    description TEXT NOT NULL,
                    severity ENUM('critical', 'high', 'medium', 'low') DEFAULT 'medium',
                    category ENUM('sql_injection', 'xss', 'csrf', 'file_upload', 'authentication', 'information_disclosure', 'other') DEFAULT 'other',
                    reproduction_steps TEXT,
                    impact TEXT,
                    reported_by VARCHAR(100) NOT NULL,
                    status ENUM('pending', 'investigating', 'fixed', 'rejected') DEFAULT 'pending',
                    admin_notes TEXT,
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci";
                
                $pdo->exec($create_table_sql);
            }
            
            $stmt = $pdo->prepare("INSERT INTO vulnerability_reports (title, description, severity, category, reproduction_steps, impact, reported_by, status) VALUES (?, ?, ?, ?, ?, ?, ?, 'pending')");
            $result = $stmt->execute([$title, $description, $severity, $category, $reproduction_steps, $impact, $username]);
            
            if ($result) {
                writeLog($pdo, $username, '취약점제보', '성공', $title);
                echo "<script>alert('취약점이 성공적으로 제보되었습니다.'); location.href='vulnerability_report.php';</script>";
                exit();
            }
        } catch (Exception $e) {
            echo "<script>alert('오류가 발생했습니다: " . addslashes($e->getMessage()) . "');</script>";
        }
    }
}

// 취약점 목록 조회 (일반 사용자는 자신의 제보만, 관리자는 전체)
try {
    if ($isAdmin) {
        $stmt = $pdo->prepare("SELECT * FROM vulnerability_reports ORDER BY created_at DESC");
        $stmt->execute();
    } else {
        $stmt = $pdo->prepare("SELECT * FROM vulnerability_reports WHERE reported_by = ? ORDER BY created_at DESC");
        $stmt->execute([$username]);
    }
    $reports = $stmt->fetchAll();
} catch (Exception $e) {
    $reports = [];
}

// 상태별 통계 (관리자만)
$stats = [];
if ($isAdmin) {
    try {
        $stmt = $pdo->query("SELECT status, COUNT(*) as count FROM vulnerability_reports GROUP BY status");
        $status_counts = $stmt->fetchAll();
        foreach ($status_counts as $row) {
            $stats[$row['status']] = $row['count'];
        }
    } catch (Exception $e) {
        // 통계 조회 실패 시 무시
    }
}
?>

<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <title>취약점 제보 시스템</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        .vulnerability-container { max-width: 1200px; margin: 0 auto; padding: 20px; }
        .report-form { background: #fff; padding: 30px; border-radius: 8px; box-shadow: 0 2px 12px rgba(0,0,0,0.1); margin-bottom: 30px; }
        .form-group { margin-bottom: 20px; }
        .form-group label { display: block; margin-bottom: 8px; font-weight: 600; color: #333; }
        .form-group input, .form-group select, .form-group textarea { width: 100%; padding: 12px; border: 1px solid #ddd; border-radius: 4px; font-size: 14px; }
        .form-group textarea { min-height: 120px; resize: vertical; }
        .btn-submit { background: #005BAC; color: #fff; padding: 12px 24px; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; }
        .btn-submit:hover { background: #004a8c; }
        .reports-list { background: #fff; padding: 30px; border-radius: 8px; box-shadow: 0 2px 12px rgba(0,0,0,0.1); }
        .report-item { border: 1px solid #eee; border-radius: 4px; padding: 20px; margin-bottom: 15px; }
        .report-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px; }
        .report-title { font-size: 18px; font-weight: 600; color: #333; }
        .severity-badge { padding: 4px 8px; border-radius: 4px; font-size: 12px; font-weight: 600; }
        .severity-critical { background: #ff4444; color: #fff; }
        .severity-high { background: #ff8800; color: #fff; }
        .severity-medium { background: #ffcc00; color: #333; }
        .severity-low { background: #00cc00; color: #fff; }
        .status-badge { padding: 4px 8px; border-radius: 4px; font-size: 12px; font-weight: 600; }
        .status-pending { background: #ffcc00; color: #333; }
        .status-investigating { background: #0099ff; color: #fff; }
        .status-fixed { background: #00cc00; color: #fff; }
        .status-rejected { background: #ff4444; color: #fff; }
        .stats-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin-bottom: 30px; }
        .stat-card { background: #f8f9fa; padding: 20px; border-radius: 8px; text-align: center; }
        .stat-number { font-size: 2rem; font-weight: 700; color: #005BAC; }
        .stat-label { color: #666; margin-top: 5px; }
        .admin-only { background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 4px; margin-bottom: 20px; }
        .admin-only h3 { color: #856404; margin-top: 0; }
    </style>
</head>
<body>
    <div class="vulnerability-container">
        <h1>🔒 취약점 제보 시스템</h1>
        <p>발견하신 보안 취약점을 제보해 주세요. 모든 제보는 검토 후 적절한 조치를 취하겠습니다.</p>
        
        <?php if ($isAdmin && !empty($stats)): ?>
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-number"><?= array_sum($stats) ?></div>
                <div class="stat-label">총 제보</div>
            </div>
            <div class="stat-card">
                <div class="stat-number"><?= $stats['pending'] ?? 0 ?></div>
                <div class="stat-label">검토 대기</div>
            </div>
            <div class="stat-card">
                <div class="stat-number"><?= $stats['investigating'] ?? 0 ?></div>
                <div class="stat-label">조사 중</div>
            </div>
            <div class="stat-card">
                <div class="stat-number"><?= $stats['fixed'] ?? 0 ?></div>
                <div class="stat-label">수정 완료</div>
            </div>
        </div>
        
        <div class="admin-only">
            <h3>👨‍💼 관리자 전용</h3>
            <p>취약점 검토 및 관리는 <a href="admin/vulnerability_management.php" style="color: #005BAC; text-decoration: underline;">관리자 페이지</a>에서 진행하세요.</p>
        </div>
        <?php endif; ?>
        
        <?php if (!$isAdmin): ?>
        <div class="report-form">
            <h2>📝 새로운 취약점 제보</h2>
            <form method="POST">
                <div class="form-group">
                    <label for="title">제목 *</label>
                    <input type="text" id="title" name="title" required placeholder="취약점의 간단한 제목을 입력하세요">
                </div>
                
                <div class="form-group">
                    <label for="category">분류</label>
                    <select id="category" name="category">
                        <option value="sql_injection">SQL Injection</option>
                        <option value="xss">Cross-Site Scripting (XSS)</option>
                        <option value="csrf">CSRF</option>
                        <option value="file_upload">파일 업로드 취약점</option>
                        <option value="authentication">인증/인가 취약점</option>
                        <option value="information_disclosure">정보 노출</option>
                        <option value="other">기타</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="severity">심각도</label>
                    <select id="severity" name="severity">
                        <option value="critical">Critical (치명적)</option>
                        <option value="high">High (높음)</option>
                        <option value="medium" selected>Medium (중간)</option>
                        <option value="low">Low (낮음)</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="description">상세 설명 *</label>
                    <textarea id="description" name="description" required placeholder="취약점에 대한 상세한 설명을 입력하세요"></textarea>
                </div>
                
                <div class="form-group">
                    <label for="reproduction_steps">재현 단계</label>
                    <textarea id="reproduction_steps" name="reproduction_steps" placeholder="취약점을 재현하는 단계별 방법을 입력하세요"></textarea>
                </div>
                
                <div class="form-group">
                    <label for="impact">영향도</label>
                    <textarea id="impact" name="impact" placeholder="이 취약점이 시스템에 미치는 영향에 대해 설명하세요"></textarea>
                </div>
                
                <button type="submit" name="submit_report" class="btn-submit">제보하기</button>
            </form>
        </div>
        <?php endif; ?>
        
        <div class="reports-list">
            <h2>📋 제보 내역</h2>
            <?php if (empty($reports)): ?>
                <p>아직 제보된 취약점이 없습니다.</p>
            <?php else: ?>
                <?php foreach ($reports as $report): ?>
                <div class="report-item">
                    <div class="report-header">
                        <div class="report-title"><?= htmlspecialchars($report['title']) ?></div>
                        <div>
                            <span class="severity-badge severity-<?= $report['severity'] ?>">
                                <?= ucfirst($report['severity']) ?>
                            </span>
                            <span class="status-badge status-<?= $report['status'] ?>">
                                <?= ucfirst($report['status']) ?>
                            </span>
                        </div>
                    </div>
                    <p><strong>분류:</strong> <?= htmlspecialchars($report['category']) ?></p>
                    <p><strong>설명:</strong> <?= nl2br(htmlspecialchars($report['description'])) ?></p>
                    <?php if ($report['reproduction_steps']): ?>
                        <p><strong>재현 단계:</strong> <?= nl2br(htmlspecialchars($report['reproduction_steps'])) ?></p>
                    <?php endif; ?>
                    <?php if ($report['impact']): ?>
                        <p><strong>영향도:</strong> <?= nl2br(htmlspecialchars($report['impact'])) ?></p>
                    <?php endif; ?>
                    <p><strong>제보자:</strong> <?= htmlspecialchars($report['reported_by']) ?></p>
                    <p><strong>제보일:</strong> <?= $report['created_at'] ?></p>
                    <?php if ($report['admin_notes']): ?>
                        <p><strong>관리자 메모:</strong> <?= nl2br(htmlspecialchars($report['admin_notes'])) ?></p>
                    <?php endif; ?>
                </div>
                <?php endforeach; ?>
            <?php endif; ?>
        </div>
    </div>
</body>
</html> 